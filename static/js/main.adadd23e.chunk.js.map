{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Hweet.js","components/HweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Hweet","hweetObj","isOwner","editing","setEditing","text","newHweet","setNewHweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","HweetFactory","userObj","hweet","setHweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","res","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","hweets","setHweets","useEffect","orderBy","onSnapshot","snapshot","hweetArr","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","idx","indexOf","substring","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adadd23e.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\n const AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {target: {name, value},} = event;\n        if (name === \"email\") {\n            setEmail(value);    \n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    }\n    \n    const onSubmit = async(event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if(newAccount) {\n                data = await authService.createUserWithEmailAndPassword(\n                    email, password\n                );\n            } else {\n                data = await authService.signInWithEmailAndPassword(\n                    email, password\n                );\n            }\n\n            console.log(data);\n        } catch(error) {\n            setError(error.message);\n        }\n    }\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">                \n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\"/>\n                <input name=\"password\" type=\"password\" placeholder=\"PW\" required value={password} onChange={onChange} className=\"authInput\" />\n                <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Sign in\"} />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    )\n }\n export default AuthForm;","import React from 'react';\nimport { authService, firebaseInstance } from 'fbase';\nimport AuthForm from 'components/AuthForm';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nconst Auth = () => {\n\n    const onSocialClick = async (event) => {\n        \n        const {\n            target: { name },\n        } = event;\n\n        let provider;\n        if(name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if(name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n\n        const data = await authService.signInWithPopup(provider);\n        console.log(data);\n    }; \n\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{ marginBottom: 30 }}\n            />\n            \n            <AuthForm />\n\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    )\n}\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Hweet = ({ hweetObj, isOwner }) => {\n\n    const [editing, setEditing] = useState(false);\n    const [newHweet, setNewHweet] = useState(hweetObj.text);\n    const onDeleteClick = async () => {\n        \n        const ok = window.confirm(\"Are you sure?\");\n        if(ok) {\n            // delete\n            await dbService.doc(`hweets/${hweetObj.id}`).delete();\n            if(hweetObj.attachmentUrl !== \"\") {\n                await storageService.refFromURL(hweetObj.attachmentUrl).delete();\n            }\n        }\n    }\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        console.log()\n\n        await dbService.doc(`hweets/${hweetObj.id}`).update({\n            text: newHweet,\n        })\n        \n        setEditing(false);\n    };\n    const onChange = (event) => {\n        const { target: { value }, } = event;\n        setNewHweet(value);\n    }\n    return (\n        <div className=\"nweet\">\n        {editing ? (\n            <>\n            {isOwner && \n            <>\n            <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input type=\"text\" placeholder=\"Edit Your Hweet\" value={newHweet} required onChange={onChange} autoFocus className=\"formInput\"/>\n                <input type=\"submit\" value=\"Update Hweet!\" className=\"formBtn\" />\n            </form>\n            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n            </span>\n\n            </>\n            }\n            </>\n        ) : (\n            <>\n            <h4>{hweetObj.text}</h4>\n            {hweetObj.attachmentUrl && <img src={hweetObj.attachmentUrl} />}\n            {isOwner && (\n            <div class=\"nweet__actions\">\n                <span onClick={onDeleteClick}>\n                    <FontAwesomeIcon icon={faTrash} />\n                </span>\n                <span onClick={toggleEditing}>\n                    <FontAwesomeIcon icon={faPencilAlt} />\n                </span>\n            </div>\n            )}\n            </>\n        )}\n        \n    </div>\n    )\n}\n\nexport default Hweet;","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { v4 as uuidv4} from 'uuid';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst HweetFactory = ({userObj}) => {\n    const [hweet, setHweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        if (hweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        \n        let attachmentUrl = \"\";\n\n        if(attachment !== \"\") {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const res = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await res.ref.getDownloadURL();\n        }\n\n        const hweetObj = {\n            text: hweet,\n            createdAt: Date.now(), \n            creatorId: userObj.uid,\n            attachmentUrl,\n        }\n        await dbService.collection(\"hweets\").add(hweetObj);            \n        setHweet(\"\");\n        setAttachment(\"\");\n    };\n\n    const onChange = (event) => {\n        const { target: { value }} = event;\n        setHweet(value);\n    }\n\n    const onFileChange = (event) => {\n        const { target: { files }, } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishEvent) => {\n            const { currentTarget: { result }, } = finishEvent;\n\n            setAttachment(result);\n        } // read가 끝나면 이벤트 실행\n\n        if(theFile) {\n            reader.readAsDataURL(theFile);    \n        }\n    }\n\n    const onClearAttachment = () => setAttachment(\"\");\n        \n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                className=\"factoryInput__input\"\n                value={hweet}\n                onChange={onChange}\n                type=\"text\"\n                placeholder=\"What's on your mind?\"\n                maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label for=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                opacity: 0,\n                }}\n            />\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                    src={attachment}\n                    style={{\n                        backgroundImage: attachment,\n                    }}\n                    />\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n              </div>\n            )}\n        </form>\n    )\n}\n\nexport default HweetFactory;","import React, { useEffect, useState } from 'react';\nimport { dbService } from 'fbase';\nimport Hweet from 'components/Hweet';\nimport HweetFactory from 'components/HweetFactory';\n\nconst Home =  ({userObj}) => {\n    \n    const [hweets, setHweets] = useState([]);\n    \n    useEffect(() => {\n        dbService.collection(\"hweets\").orderBy(\"createdAt\", \"desc\").onSnapshot(snapshot => {\n            const hweetArr = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data(),\n            }));\n\n            setHweets(hweetArr);\n        });\n    }, []);\n\n    \n    return (\n        <div className=\"container\">\n            <HweetFactory userObj={userObj}/>\n            \n            <div style={{ marginTop: 30 }}>\n                {hweets.map((hweet) => (\n                    <Hweet key={hweet.id} hweetObj={hweet} isOwner={hweet.creatorId === userObj.uid}/>\n                ))}\n            </div>\n        </div>\n    )\n}\nexport default Home;","import React, { useState } from 'react';\nimport { authService } from 'fbase';\nimport { useHistory } from 'react-router-dom';\n\nconst Profile = ({ refreshUser, userObj }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    \n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    }\n\n    const onChange = (event) => {\n        const { target: { value }} = event;\n        setNewDisplayName(value);\n\n    }\n    \n    const onSubmit = async (event) => {\n        event.preventDefault();\n\n        if(userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            })\n            refreshUser();\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input type=\"text\" placeholder=\"Display Name\" value={newDisplayName} onChange={onChange}  autoFocus className=\"formInput\" />\n                <input\n                    type=\"submit\"\n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }} \n                />\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n}\n\nexport default Profile;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n    <nav>\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n            <li>\n                <Link to=\"/\" style={{ marginRight: 10 }}>\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n                </Link>\n            </li>\n            <li>\n                <Link\n                    to=\"/profile\"\n                    style={{\n                        marginLeft: 10,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        fontSize: 12,\n                    }}\n                >\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                        <span style={{ marginTop: 10 }}>\n                        {userObj.displayName\n                        ? `${userObj.displayName}의 Profile`\n                        : \"Profile\"}\n                        </span>\n                </Link>\n            </li>\n        </ul>\n    </nav>\n)\n\nexport default Navigation;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile';\nimport Navigation from 'components/Navigation';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    \n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                <div\n                    style={{\n                    maxWidth: 890,\n                    width: \"100%\",\n                    margin: \"0 auto\",\n                    marginTop: 80,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    }}\n                >\n                    <Route exact path=\"/\">\n                    <Home userObj={userObj} />\n                    </Route>\n                    <Route exact path=\"/profile\">\n                    <Profile userObj={userObj} refreshUser={refreshUser} />\n                    </Route>\n                </div>\n                ) : (\n                <>\n                    <Route exact path=\"/\">\n                    <Auth />\n                    </Route>\n                </>\n                )}\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter;\n\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from 'fbase';\n\nfunction App() {\n  \n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged(async (user) => {\n      if(user) {\n        if(user.displayName == null) {\n          const idx = user.email.indexOf(\"@\");\n          const displayName = user.email.substring(0, idx);\n          await user.updateProfile({displayName})\n        }\n        setUserObj(user);\n        // setUserObj({\n        //   displayName: user.displayName,\n        //   uid: user.uid,\n        //   updateProfile: (args) => user.updateProfile(args)\n        // });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => { // reRendering 되는 object가 크면 변경되지 않는 버그가 생길 수 있다\n    \n    setUserObj({ ...authService.currentUser });\n    // const user = authService.currentUser;\n    // setUserObj({\n    //   displayName: user.displayName,\n    //   uid: user.uid,\n    //   updateProfile: (args) => user.updateProfile(args)\n    // })\n  }\n    \n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"Initializing...\" }\n      <footer>&copy; {new Date().getFullYear()} Hwitter </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}